user nginx;
worker_processes  auto;

# error_log stderr debug;
error_log stderr warn;

pid        /var/run/nginx.pid;
load_module /usr/lib64/nginx/modules/ngx_http_auth_jwt_module.so;

events {
    worker_connections 1024;
    # worker_connections 2560;
}

#worker_rlimit_nofile 2560;
#worker_rlimit_nofile 5120;


http {
    include       mime.types;
    default_type  application/octet-stream;
    #proxy_set_header X-Forwarded-Proto $scheme;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;
    #access_log stdout;
    #access_log off;
    access_log /dev/stdout combined;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;

    map $http_upgrade $connection_upgrade {
      default upgrade;
      '' close;
    }

    server {
        listen 443 ssl http2;
        keepalive_requests 2000;
        http2_max_concurrent_streams 1024;
        ssl_certificate /etc/nginx/certificates/ssl.cer;
        ssl_certificate_key /etc/nginx/certificates/ssl.key;

        location /collections/ {
          alias /var/kentech/afb/collections/;
          auth_jwt_use_keyfile on;
          auth_jwt_keyfile_path "/etc/nginx/certificates/jwt.pem";
          auth_jwt_loginurl "/login";
          auth_jwt_enabled on;
          auth_jwt_validate_email off;
          auth_jwt_algorithm RS256;
          auth_jwt_validation_type COOKIE=access_token;
          auth_jwt_redirect off;
          try_files $uri =404;
          expires 30d;
          gzip on;
          gzip_comp_level 9;
          gzip_types *;
          access_log off;
        }

	      location /api/ {
          proxy_pass http://server:3002;
          proxy_read_timeout 90s;
          proxy_buffering off;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /socket.io/ {
          proxy_pass http://server:3002;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "Upgrade";
          proxy_set_header Host $host;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /sockjs-node/ {
          proxy_pass http://client:3000;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "Upgrade";
        }

       location / {
         proxy_pass http://client:3000;
       }
    }
}
